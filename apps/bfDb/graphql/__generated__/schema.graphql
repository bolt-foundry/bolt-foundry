### @generated 
### This file was generated by Nexus Schema
### Do not make changes to this file directly


type BfDeck implements BfNode {
  description: String
  id: ID!
  name: String
  slug: String!
  systemPrompt: String
}

type BfEdge implements BfNode {
  id: ID!
  role: String
}

type BfGrader implements BfNode {
  graderText: String
  id: ID!
}

type BfGraderResult implements BfNode {
  explanation: String
  id: ID!
  reasoningProcess: String
  score: Int
}

"""Base interface for all Bolt Foundry database nodes"""
interface BfNode {
  id: ID!
}

type BfOrganization implements BfNode {
  domain: String
  id: ID!
  name: String
}

type BfPerson implements BfNode {
  email: String
  id: ID!
  memberOf: BfOrganization
  name: String
}

type BfSample implements BfNode {
  collectionMethod: String
  completionData: JSON
  id: ID!
}

type BfSampleFeedback implements BfNode {
  explanation: String
  id: ID!
  score: Int
}

type BlogPost implements Node {
  author: String
  content: String!
  excerpt: String!
  heroImage: String
  id: ID!
  publishedAt: IsoDate
  tags: String!
  title: String!
  updatedAt: IsoDate
}

type BlogPostConnection {
  count: Int

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [BlogPostEdge]

  """Flattened list of BlogPost type"""
  nodes: [BlogPost]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type BlogPostEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: BlogPost
}

"""Interface for current viewer authentication state"""
interface CurrentViewer {
  id: ID
  orgBfOid: String
  personBfGid: String
}

type CurrentViewerLoggedIn implements CurrentViewer {
  id: ID
  orgBfOid: String
  personBfGid: String
}

type CurrentViewerLoggedOut implements CurrentViewer {
  id: ID
  orgBfOid: String
  personBfGid: String
}

type GithubRepoStats implements Node {
  id: ID!
  stars: Int!
}

"""ISO 8601 date string (e.g., 2025-06-10T14:30:00.000Z)"""
scalar IsoDate

"""JSON data structure (objects, arrays, primitives)"""
scalar JSON

type JoinWaitlistPayload {
  message: String
  success: Boolean!
}

type Mutation {
  createDeck(description: String, name: String!, slug: String!, systemPrompt: String!): BfDeck
  joinWaitlist(company: String, email: String!, name: String!): JoinWaitlistPayload
  loginWithGoogle(idToken: String!): CurrentViewer
  submitSample(collectionMethod: String, completionData: String!, deckId: String!): BfSample
}

"""An object with a unique identifier"""
interface Node {
  id: ID!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type PublishedDocument implements Node {
  content: String!
  id: ID!
}

type Query {
  blogPost(slug: String): BlogPost
  blogPosts(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String
    filterByYear: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    sortDirection: String
  ): BlogPostConnection
  currentViewer: CurrentViewer
  deck(slug: String): BfDeck
  documentsBySlug(slug: String): PublishedDocument
  githubRepoStats: GithubRepoStats
  id: ID
  ok: Boolean
}

type Waitlist {
  id: ID
}
