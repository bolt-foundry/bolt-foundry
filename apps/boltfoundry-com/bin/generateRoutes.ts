#!/usr/bin/env -S deno run -A

import { walk } from "@std/fs/walk";
import { join } from "@std/path";
import { getLogger } from "@bfmono/packages/logger/logger.ts";

const logger = getLogger(import.meta);

async function generateBuiltRoutes() {
  const appPath = "apps/boltfoundry-com";
  const entrypointDirs = [
    join(Deno.cwd(), `${appPath}/entrypoints`),
    join(Deno.cwd(), `${appPath}/mutations`),
  ];
  const outputPath = join(
    Deno.cwd(),
    `${appPath}/__generated__/builtRoutes.ts`,
  );

  const imports = [];
  const exports = [];
  const isoEntrypoints = [];

  // Ensure directory exists
  await Deno.mkdir(join(Deno.cwd(), `${appPath}/__generated__`), {
    recursive: true,
  });

  // Process each entrypoint directory
  for (const entrypointsDir of entrypointDirs) {
    // Skip if directory doesn't exist yet
    try {
      await Deno.stat(entrypointsDir);
    } catch (error) {
      logger.warn(
        `Entrypoints directory ${entrypointsDir} does not exist yet`,
        error,
      );
      continue;
    }

    for await (
      const entry of walk(entrypointsDir, {
        exts: [".ts", ".tsx"],
        maxDepth: 10,
      })
    ) {
      if (entry.isFile && !entry.name.endsWith(".test.ts")) {
        const relativePath = entry.path.replace(/\\/g, "/");
        const pathFromProject = relativePath.split(
          `${Deno.cwd().replace(/\\/g, "/")}/`,
        )[1];
        const pathFromApp = pathFromProject.split(`${appPath}/`)[1];
        const exportName = pathFromApp
          .replace(/\//g, "_")
          .replace(/\.(ts|tsx)$/, "");

        // Import statement
        imports.push(
          `import ${exportName} from "@bfmono/${pathFromProject}";`,
        );

        // Export statement
        exports.push(`  ${exportName},`);

        // Check if it's an isograph entrypoint
        const content = await Deno.readTextFile(entry.path);
        if (content.includes("@iso-bfc")) {
          isoEntrypoints.push(`  ${exportName},`);
        }
      }
    }
  }

  // Generate the TypeScript file
  const fileContent = `// This file is auto-generated by bin/generateRoutes.ts
// Do not edit manually

import type { ReactNode } from "react";
import type { BfIsographEntrypoint } from "../lib/BfIsographEntrypoint.ts";

// Import all entrypoints
${imports.join("\n")}

// Re-export all entrypoints
export {
${exports.join("\n")}
};

// Type for route entrypoints
export type RouteEntrypoint = BfIsographEntrypoint<ReactNode>;

// Collect isograph entrypoints
export const isoEntrypoints = [
${isoEntrypoints.join("\n")}
];
`;

  // Write the file
  await Deno.writeTextFile(outputPath, fileContent);
  logger.info(`Generated ${outputPath} with ${imports.length} entrypoints`);
}

// Run if this is the main module
if (import.meta.main) {
  await generateBuiltRoutes();
}
