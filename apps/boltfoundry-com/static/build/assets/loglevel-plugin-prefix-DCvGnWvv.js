import{g as $}from"../ClientRoot.js";var s={exports:{}},C=s.exports,w;function D(){return w||(w=1,function(c){(function(i,f){c.exports?c.exports=f():i.prefix=f(i)})(C,function(i){var f=function(e){for(var r=1,m=arguments.length,n;r<m;r++)for(n in arguments[r])Object.prototype.hasOwnProperty.call(arguments[r],n)&&(e[n]=arguments[r][n]);return e},b={template:"[%t] %l:",levelFormatter:function(e){return e.toUpperCase()},nameFormatter:function(e){return e||"root"},timestampFormatter:function(e){return e.toTimeString().replace(/.*(\d{2}:\d{2}:\d{2}).*/,"$1")},format:void 0},x,l={},O=function(e){if(!e||!e.getLogger)throw new TypeError("Argument is not a root logger");x=e},E=function(e,r){if(!e||!e.setLevel)throw new TypeError("Argument is not a logger");var m=e.methodFactory,n=e.name||"",L=l[n]||l[""]||b;function T(h,j,p){var k=m(h,j,p),a=l[p]||l[""],A=a.template.indexOf("%t")!==-1,S=a.template.indexOf("%l")!==-1,_=a.template.indexOf("%n")!==-1;return function(){for(var t="",d=arguments.length,o=Array(d),v=0;v<d;v++)o[v]=arguments[v];if(n||!l[p]){var y=a.timestampFormatter(new Date),P=a.levelFormatter(h),F=a.nameFormatter(p);a.format?t+=a.format(P,F,y):(t+=a.template,A&&(t=t.replace(/%t/,y)),S&&(t=t.replace(/%l/,P)),_&&(t=t.replace(/%n/,F))),o.length&&typeof o[0]=="string"?o[0]=t+" "+o[0]:o.unshift(t)}k.apply(void 0,o)}}return l[n]||(e.methodFactory=T),r=r||{},r.template&&(r.format=void 0),l[n]=f({},L,r),e.setLevel(e.getLevel()),x||e.warn("It is necessary to call the function reg() of loglevel-plugin-prefix before calling apply. From the next release, it will throw an error. See more: https://github.com/kutuluk/loglevel-plugin-prefix/blob/master/README.md"),e},u={reg:O,apply:E},g;return i&&(g=i.prefix,u.noConflict=function(){return i.prefix===u&&(i.prefix=g),u}),u})}(s)),s.exports}var M=D();const q=$(M),z=Object.freeze(Object.defineProperty({__proto__:null,default:q},Symbol.toStringTag,{value:"Module"}));export{z as l};
