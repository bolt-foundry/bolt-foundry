import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useState } from "react";
import { useChat } from "ai/react";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const { messages, input, handleInputChange, handleSubmit, isLoading } =
    useChat();

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome to Next.js on Replit!</h1>

        <div className={styles.grid}>
          <Link href="/chat" className={styles.card}>
            <h2>Streaming Chat &rarr;</h2>
            <p>Chat with AI using streaming responses</p>
          </Link>

          <Link href="/regular-chat" className={styles.card}>
            <h2>Regular Chat &rarr;</h2>
            <p>Chat with AI using regular (non-streaming) responses</p>
          </Link>
        </div>

        <div className={styles.chatBox}>
          <div className={styles.messages}>
            {messages.length === 0 && (
              <div className={styles.emptyState}>
                <p>Ask me anything...</p>
              </div>
            )}
            {messages.map((message) => (
              <div
                key={message.id}
                className={`${styles.message} ${
                  message.role === "user"
                    ? styles.userMessage
                    : styles.aiMessage
                }`}
              >
                {message.content}
              </div>
            ))}
          </div>
          <form onSubmit={handleSubmit} className={styles.inputForm}>
            <input
              className={styles.chatInput}
              value={input}
              onChange={handleInputChange}
              placeholder="Type your message..."
              onKeyDown={(e) => {
                if (e.key === "Enter" && !e.shiftKey) {
                  e.preventDefault();
                  handleSubmit(e);
                }
              }}
            />
            <button
              type="submit"
              className={styles.sendButton}
              disabled={isLoading || input.trim() === ""}
            >
              {isLoading ? "Thinking..." : "Send"}
            </button>
          </form>
        </div>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a href="/chat" className={styles.card}>
            <h2>AI Chat &rarr;</h2>
            <p>Chat with an AI assistant powered by OpenAI.</p>
          </a>

          <a
            href="https://docs.replit.com/category/deployments"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>After you are happy with this app, deploy it on Replit!</p>
          </a>
        </div>
      </main>
    </div>
  );
};

export default Home;
