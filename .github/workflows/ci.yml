name: CI
on: [pull_request]

jobs:
  build:
    name: BFF CI
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # Setup GitHub Actions cache for Nix store
      - name: Setup Nix cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/nix
            /nix/store
          key: ${{ runner.os }}-nix-${{ hashFiles('flake.lock', 'replit.nix') }}
          restore-keys: |
            ${{ runner.os }}-nix-

      # Setup Nix with flakes enabled and optimizations
      - name: Setup Nix
        uses: cachix/install-nix-action@v25
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            keep-outputs = true
            keep-derivations = true
            builders-use-substitutes = true
            max-jobs = auto
            cores = 0
            substituters = https://cache.nixos.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=

      # Create and save a Nix shell profile for future runs
      - name: Instantiate dev shell
        run: |
          # Create a profile to speed up future evaluations
          nix develop --profile dev-profile

      # Prepare environment variables and directories
      - name: Set environment variables
        run: |
          # Set environment variables
          echo "INFRA_BIN_PATH=$GITHUB_WORKSPACE/infra/bin" >> $GITHUB_ENV
          echo "BF_ENV=DEVELOPMENT" >> $GITHUB_ENV

          # Make infra/bin directory and ensure it's executable
          mkdir -p $GITHUB_WORKSPACE/infra/bin
          chmod -R +x $GITHUB_WORKSPACE/infra/bin

          # Add infra/bin to PATH
          echo "$GITHUB_WORKSPACE/infra/bin" >> $GITHUB_PATH

      # Set secrets as environment variables
      - name: Set secrets
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          ASSEMBLY_AI_KEY: ${{ secrets.ASSEMBLY_AI_KEY }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          OPEN_ROUTER_API_KEY: ${{ secrets.OPEN_ROUTER_API_KEY }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          OTEL_EXPORTER_OTLP_HEADERS: authorization=${{ secrets.HYPERDX_INGESTION_KEY }}
          OTEL_EXPORTER_OTLP_ENDPOINT: https://in-otel.hyperdx.io
          OTEL_SERVICE_NAME: CONTENT_FOUNDRY
        run: |
          echo "Required environment variables have been set"

      # Make bff executable if it exists
      - name: Prepare bff tool
        run: |
          if [ -f "$INFRA_BIN_PATH/bff" ]; then
            chmod +x $INFRA_BIN_PATH/bff
          fi

      # Run CI using the instantiated profile for speed
      - name: Run BFF CI with flake
        run: |
          # Create a script to run in the development environment
          cat > run_ci.sh << 'EOF'
          #!/usr/bin/env bash
          set -e
          export PATH="$INFRA_BIN_PATH:$PATH"

          # Run deno install to resolve dependencies
          echo "Running deno install..."
          deno install

          # Run the CI command
          echo "Running bff ci command..."
          bff ci -g
          EOF

          chmod +x run_ci.sh

          # Use the profile we created earlier for faster startup
          nix develop --profile dev-profile --command ./run_ci.sh