name: CI
on: [pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  DeterminateCI:
    uses: DeterminateSystems/ci/.github/workflows/workflow.yml@main
    permissions:
      id-token: write
      contents: read
    with:
      visibility: private
      publish: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}

  bff-tests:
    needs: DeterminateCI
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ASSEMBLY_AI_KEY: ${{ secrets.ASSEMBLY_AI_KEY }}
      OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
      OPEN_ROUTER_API_KEY: ${{ secrets.OPEN_ROUTER_API_KEY }}
      POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
      WAITLIST_API_KEY: ${{ secrets.WAITLIST_API_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true

      - name: FlakeHub cache
        uses: DeterminateSystems/flakehub-cache-action@main

      - name: Restore Deno / Node cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
            vendor
            node_modules
          key: deno-${{ runner.os }}-${{ hashFiles('**/deno.json*', '**/package.json', '**/lock*') }}
          restore-keys: |
            deno-${{ runner.os }}-

      - name: Enter dev shell & run tests
        run: |
          nix develop . --accept-flake-config --impure --command bash -c '
            bff ci --include-bolt-foundry
          '
