name: CI
on: [pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  bff-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # OIDC for FlakeHub
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ASSEMBLY_AI_KEY: ${{ secrets.ASSEMBLY_AI_KEY }}
      OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
      OPEN_ROUTER_API_KEY: ${{ secrets.OPEN_ROUTER_API_KEY }}
      POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
      WAITLIST_API_KEY: ${{ secrets.WAITLIST_API_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DENO_DIR: ${{ github.workspace }}/.deno-cache # keeps it inside the repo dir
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: DeterminateSystems/nix-installer-action@main
        with: { determinate: true }

      - uses: DeterminateSystems/flakehub-cache-action@main

      # 1️⃣ RESTORE
      - name: Restore Deno / vendored / node cache
        id: cache-deno
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ env.DENO_DIR }}
            vendor
            node_modules
          key: deno-${{ runner.os }}-${{ hashFiles('**/deno.json*', '**/package.json', '**/lock*') }}
          restore-keys: |
            deno-${{ runner.os }}-

      - name: Put repo tools on PATH
        run: echo "$GITHUB_WORKSPACE/infra/bin" >> "$GITHUB_PATH"

      - name: Enter dev shell & run tests
        run: |
          nix develop . --accept-flake-config --impure --command bash -c '
            bff ci --include-bolt-foundry --skip-build
          '

      # 2️⃣ SAVE  (only if we didn't hit above)
      - name: Save Deno / vendored / node cache
        if: ${{ steps.cache-deno.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ env.DENO_DIR }}
            vendor
            node_modules
          key: ${{ steps.cache-deno.outputs.cache-primary-key }}
