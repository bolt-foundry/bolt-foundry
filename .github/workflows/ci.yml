name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: bff ci
    runs-on: ubuntu-latest

    env:
      DATABASE_URL:        ${{ secrets.DATABASE_URL }}
      ASSEMBLY_AI_KEY:     ${{ secrets.ASSEMBLY_AI_KEY }}
      OPEN_AI_API_KEY:     ${{ secrets.OPEN_AI_API_KEY }}
      OPEN_ROUTER_API_KEY: ${{ secrets.OPEN_ROUTER_API_KEY }}
      POSTHOG_API_KEY:     ${{ secrets.POSTHOG_API_KEY }}
      WAITLIST_API_KEY:    ${{ secrets.WAITLIST_API_KEY }}
      INFRA_BIN_PATH:      ${{ github.workspace }}/infra/bin
      
    uses: DeterminateSystems/ci/.github/workflows/workflow.yml@main
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Set environment variables
        run: |
          echo "$GITHUB_WORKSPACE/infra/bin" >> $GITHUB_PATH

      # Parse .replit env using pure bash
      - name: Parse .replit env and export to GitHub Actions
        run: |
          # Extract the [env] section from .replit
          sed -n '/^\[env\]/,/^\[/p' .replit | grep -v '^\[' > .env_section

          # Process each line in the environment section
          while IFS= read -r line; do
            # Skip empty lines, comments, or section headers
            if [[ "$line" =~ ^[[:space:]]*$ || "$line" =~ ^[[:space:]]*# || "$line" =~ ^\[ ]]; then
              continue
            fi

            # Extract key and value
            if [[ "$line" =~ ^([A-Za-z0-9_]+)[[:space:]]*=[[:space:]]*(.*) ]]; then

              key="${BASH_REMATCH[1]}"
              value="${BASH_REMATCH[2]}"

              # Skip PATH variable as it's handled separately
              if [[ "$key" == "PATH" ]]; then
                continue
              fi

              # Remove quotes if present
              value="${value//\"/}"

              # Replace $REPL_HOME with $GITHUB_WORKSPACE
              value="${value//\$REPL_HOME/$GITHUB_WORKSPACE}"

              # Skip commented out variables
              if [[ "$key" == \#* ]]; then
                continue
              fi

              echo "$key=$value" >> $GITHUB_ENV
              echo "Added environment variable: $key"
            fi
          done < .env_section

          # Clean up temporary file
          rm .env_section

      # - name: Install Nix
      #   uses: DeterminateSystems/nix-installer-action@v10

      # - name: Checkout repository
      #   uses: actions/checkout@v4

      # # Pull + push to FlakeHub Cache (replaces all store-level caches above)
      # - name: Enable FlakeHub Cache
      #   uses: DeterminateSystems/flakehub-cache-action@main

      # # Build the dev shell into a profile (FlakeHub will store it automatically)
      # - name: Build nix development shell
      #   run: |
      #     nix develop . --impure --profile /tmp/nix-shell-cache/profile

      # # Run the CI process
      # - name: Run CI in nix
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     nix develop . --impure --profile /tmp/nix-shell-cache/profile --command bash -c "
      #       bff ci -g --include-bolt-foundry
      #     "

      # - name: Upload test screenshots
      #   uses: actions/upload-artifact@v4
      #   if: always() # Run even if previous steps failed
      #   with:
      #     name: e2e-screenshots-${{ github.run_id }}
      #     path: ${{ github.workspace }}/tmp/screenshots/
      #     retention-days: 5

      # # Optional: Collect and upload build outputs
      # - name: Cache build outputs
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       result
      #       result-*
      #       dist
      #       build
      #     key: ${{ runner.os }}-build-outputs-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-outputs-

